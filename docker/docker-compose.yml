version: '3'

services:
  arangodb:
    image: arangodb:latest
    ports:
      - 8529:8529
    volumes:
      - ./volumes/arangodb/data:/var/lib/arangodb3
      - ./volumes/arangodb/apps:/var/lib/arangodb3-apps
    environment:
      ARANGO_ROOT_PASSWORD: rootpassword

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: go-backend-monolith
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./volumes/redis:/data

  kafka:
    depends_on:
      - zookeeper
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    volumes:
      - ./volumes/kafka:/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  # application:
  #   depends_on:
  #     - elasticsearch
  #     - arangodb
  #     - zookeeper
  #     - kafka
  #   build:
  #     context: ../
  #     dockerfile: ./docker/application.dockerfile
  #   ports:
  #     - 5000:5000
  #   restart: always
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file: ../.env